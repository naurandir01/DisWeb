import {
  Link,
  useLocation,
  useNavigate,
  useSearchParams
} from "./chunk-3GBW36VJ.js";
import {
  AppProvider
} from "./chunk-UFP6QOPH.js";
import "./chunk-XYA3KCBN.js";
import "./chunk-3Y3FOD7Y.js";
import "./chunk-FRWGDWYB.js";
import "./chunk-WWLTOY2P.js";
import "./chunk-MIK75JIC.js";
import "./chunk-ZCIWLKCD.js";
import "./chunk-Z76IOXGX.js";
import "./chunk-7EWKTLKX.js";
import "./chunk-QH5373Z6.js";
import "./chunk-IM6YDUBT.js";
import "./chunk-DLLTR5PI.js";
import "./chunk-C6WWHQR7.js";
import "./chunk-ZI6JU6O2.js";
import "./chunk-6O7JVYRR.js";
import "./chunk-OBB5DGZH.js";
import "./chunk-EQVGPMFN.js";
import "./chunk-2G4TWILZ.js";
import "./chunk-OPLVMWHM.js";
import "./chunk-UTHXGC5Z.js";
import "./chunk-QDXFVWJQ.js";
import "./chunk-K27G2EXW.js";
import "./chunk-TCWLIE4T.js";
import "./chunk-PDHYJCQV.js";
import "./chunk-3OH6M5CR.js";
import "./chunk-ZCSSBJ3Q.js";
import "./chunk-MTCUU2XM.js";
import {
  require_jsx_runtime
} from "./chunk-HJRYNCSI.js";
import {
  require_react
} from "./chunk-H3CBOMNX.js";
import {
  __toESM
} from "./chunk-2TUXWMP5.js";

// node_modules/@toolpad/core/react-router/ReactRouterAppProvider.js
var React = __toESM(require_react());
var import_jsx_runtime = __toESM(require_jsx_runtime());
var Link2 = React.forwardRef((props, ref) => {
  const {
    href,
    history,
    ...rest
  } = props;
  return (0, import_jsx_runtime.jsx)(Link, {
    ref,
    to: href,
    replace: history === "replace",
    ...rest
  });
});
function ReactRouterAppProvider(props) {
  const {
    pathname
  } = useLocation();
  const [searchParams] = useSearchParams();
  const navigate = useNavigate();
  const navigateImpl = React.useCallback((url, {
    history = "auto"
  } = {}) => {
    if (history === "auto" || history === "push") {
      return navigate(url);
    }
    if (history === "replace") {
      return navigate(url, {
        replace: true
      });
    }
    throw new Error(`Invalid history option: ${history}`);
  }, [navigate]);
  const routerImpl = React.useMemo(() => ({
    pathname,
    searchParams,
    navigate: navigateImpl,
    Link: Link2
  }), [pathname, searchParams, navigateImpl]);
  return (0, import_jsx_runtime.jsx)(AppProvider, {
    router: routerImpl,
    ...props
  });
}
export {
  ReactRouterAppProvider as AppProvider,
  ReactRouterAppProvider
};
//# sourceMappingURL=@toolpad_core_react-router.js.map
